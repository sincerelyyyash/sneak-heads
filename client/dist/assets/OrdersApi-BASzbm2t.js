import{i as d,j as p,k as g}from"./Nav-g8AsO58g.js";var w="https://js.stripe.com/v3",y=/^https:\/\/js\.stripe\.com\/v3\/?(\?.*)?$/,v="loadStripe.setLoadParameters was called but an existing Stripe.js script already exists in the document; existing script parameters will be used",E=function(){for(var r=document.querySelectorAll('script[src^="'.concat(w,'"]')),e=0;e<r.length;e++){var t=r[e];if(y.test(t.src))return t}return null},m=function(r){var e=r&&!r.advancedFraudSignals?"?advancedFraudSignals=false":"",t=document.createElement("script");t.src="".concat(w).concat(e);var n=document.head||document.body;if(!n)throw new Error("Expected document.body not to be null. Stripe.js requires a <body> element.");return n.appendChild(t),t},L=function(r,e){!r||!r._registerWrapper||r._registerWrapper({name:"stripe-js",version:"3.3.0",startTime:e})},i=null,u=null,c=null,P=function(r){return function(){r(new Error("Failed to load Stripe.js"))}},j=function(r,e){return function(){window.Stripe?r(window.Stripe):e(new Error("Stripe.js not available"))}},b=function(r){return i!==null?i:(i=new Promise(function(e,t){if(typeof window>"u"||typeof document>"u"){e(null);return}if(window.Stripe&&r&&console.warn(v),window.Stripe){e(window.Stripe);return}try{var n=E();if(n&&r)console.warn(v);else if(!n)n=m(r);else if(n&&c!==null&&u!==null){var a;n.removeEventListener("load",c),n.removeEventListener("error",u),(a=n.parentNode)===null||a===void 0||a.removeChild(n),n=m(r)}c=j(e,t),u=P(t),n.addEventListener("load",c),n.addEventListener("error",u)}catch(f){t(f);return}}),i.catch(function(e){return i=null,Promise.reject(e)}))},C=function(r,e,t){if(r===null)return null;var n=r.apply(void 0,e);return L(n,t),n},s,S=!1,h=function(){return s||(s=b(null).catch(function(r){return s=null,Promise.reject(r)}),s)};Promise.resolve().then(function(){return h()}).catch(function(o){S||console.warn(o)});var x=function(){for(var r=arguments.length,e=new Array(r),t=0;t<r;t++)e[t]=arguments[t];S=!0;var n=Date.now();return h().then(function(a){return C(a,e,n)})};const I=async o=>{try{return(await d.post(`${p}/order/cancel-order`,{orderId:o},{withCredentials:!0})).data}catch{}},T=async()=>{try{return(await d.get(`${p}/order/all-orders`,{withCredentials:!0})).data}catch{}},A=async(o,r)=>{const e=await x(g);try{const t=o.map(l=>({price_data:{currency:"inr",product_data:{name:l.product.name},unit_amount:l.subtotal*100},quantity:l.quantity})),a=(await d.post(`${p}/order/create-checkout-session`,{shippingInfo:r,lineItems:t},{withCredentials:!0})).data.message.id;(await e.redirectToCheckout({sessionId:a})).error}catch{}};export{I as c,T as g,A as m};
